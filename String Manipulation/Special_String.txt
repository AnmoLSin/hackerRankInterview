import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the substrCount function below.
    static long substrCount(int n, String str) {   
    int result = 0; 
  
    int[] sameChar = new int[n]; 
    for(int v = 0; v < n; v++) 
        sameChar[v] = 0; 
  
    int i = 0;  
    while (i < n)  
    { 
  
        int sameCharCount = 1; 
  
        int j = i + 1; 
  
        while (j < n &&  
            str.charAt(i) == str.charAt(j)) 
        { 
            sameCharCount++; 
            j++; 
        } 
        result += (sameCharCount * (sameCharCount + 1) / 2); 
        sameChar[i] = sameCharCount; 
        i = j; 
    } 
  

    for (int j = 1; j < n; j++) 
    { 
        if (str.charAt(j) == str.charAt(j - 1)) 
            sameChar[j] = sameChar[j - 1]; 
  
        if (j > 0 && j < (n - 1) && 
        (str.charAt(j - 1) == str.charAt(j + 1) && 
             str.charAt(j) != str.charAt(j - 1))) 
            result += Math.min(sameChar[j - 1], 
                               sameChar[j + 1]); 
    } 
   
    return result;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String s = scanner.nextLine();

        long result = substrCount(n, s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
